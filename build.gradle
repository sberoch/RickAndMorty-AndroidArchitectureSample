// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlinVersion = '1.5.10'
        // App dependencies
        androidXVersion = '1.0.0'
        androidXTestCoreVersion = '1.3.0'
        androidXTestExtKotlinRunnerVersion = '1.1.2'
        androidXTestRulesVersion = '1.2.0'
        androidXAnnotations = '1.2.0'
        androidXLegacySupport = '1.0.0'
        appCompatVersion = '1.3.0'
        archLifecycleVersion = '2.3.1'
        archTestingVersion = '2.1.0'
        cardVersion = '1.0.0'
        coroutinesVersion = '1.5.0'
        dexMakerVersion = '2.12.1'
        espressoVersion = '3.3.0'
        fragmentVersion = '1.3.4'
        fragmentKtxVersion = '1.3.4'
        hamcrestVersion = '1.3'
        junitVersion = '4.13.1'
        materialVersion = '1.3.0'
        multiDexVersion = '2.0.1'
        recyclerViewVersion = '1.2.0'
        robolectricVersion = '4.5.1'
        roomVersion = '2.3.0'
        rulesVersion = '1.0.1'
        timberVersion = '4.7.1'
        truthVersion = '1.1.2'
        navigationVersion = '2.3.5'
        ktlintVersion = '0.33.0'
        hiltVersion = "2.36"
    }
    repositories {
        google()
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.35.1'
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.3.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
apply plugin: "kotlin-allopen"
allOpen {
    annotation("com.example.rickandmorty.data.OpenForTesting")
    // annotations("com.another.Annotation", "com.third.Annotation")
}
allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
